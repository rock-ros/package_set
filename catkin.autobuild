# create a catkin_package, so the catkin "src" folder does not occur in the packake name
# done by creating a real package include in the src folder and also creating a metapackage
# for renaming to the manifests, so one can write "- ros_ws/navigation" and that translates to a 
# ros_ws/src/navigation checkout destination

def catkin_package (name, &block)
	catkin_package_internal("ros/src/#{name}", &block)
	remove_from_default "ros/src/#{name}"
	metapackage "ros/#{name}", "ros/src/#{name}" do |pkg|
	end
	#makes old manifest.xml of ros resolvable
	metapackage "#{name}", "ros/src/#{name}" do |pkg|
	end
end

# catkin packages are build in a single step by catkin
# so here, they all depend on a single special package which only executes the build once
# this dependency is added here

def catkin_package_internal(options, &block)
    package_common(:import, options) do |pkg|
    	yield(pkg) if block_given?
        pkg.depends_on('ros')
    end
end


# build definitions for catkin, catkin_package are all dependent on this,
# so the build is only executed once for a single catkin_build_package:
def catkin_build_package(options, &block)
    package_common(:import, options) do |pkg|
		yield(pkg) if block_given?
		def pkg.import (whatever)
			#we don't import, but the install function (overridden below) needs to be executed, so this is a import package with nothing to import
	    end
	    def pkg.install
	    	message "invoking catkin_make_isolated in folder \"%s\": this could take a while"
	        message "\t to see the progress use: tail -f #{ENV['AUTOPROJ_CURRENT_ROOT']}/install/log/ros-build.log \n\t or use autoproj build --verbose"
	        installspace=ENV['AUTOPROJ_CURRENT_ROOT'] +"/install/"
	        #Autobuild::Subprocess.run(self, 'build', 'catkin_make_isolated', :working_directory => 'ros')
	        Autobuild::Subprocess.run(self, 'build', 'sh', 'catkin_wrap.sh', :working_directory => 'autoproj/remotes/rock.ros/')
	        #the install space is included in the path, but we want to prefer local of global ros packages for building
	        #so we dion't need it in the path (results in linking the wrong libpcl, with missing base-types dependency for ros packages)
	        message "installing catkin packages to " + installspace
	        Autobuild::Subprocess.run(self, 'build', 'sh', 'catkin_wrap.sh', '--install', "--install-space=#{installspace}", :working_directory => 'autoproj/remotes/rock.ros/')
	    end
	    
	    def pkg.prepare_for_forced_build
	    	message "invoking catkin_make_isolated --force-cmake in folder \"%s\": this could take a while"
	    	message "\t to see the progress use: tail -f #{ENV['AUTOPROJ_CURRENT_ROOT']}/install/log/ros-build.log \n\t or use autoproj build --verbose"
	    	installspace=ENV['AUTOPROJ_CURRENT_ROOT'] +"/install/"
	    	Autobuild::Subprocess.run(self, 'build', 'sh', 'catkin_wrap.sh', "--force-cmake", :working_directory => 'autoproj/remotes/rock.ros/')
	    end
	    
	    def pkg.prepare_for_rebuild
	    	installspace=ENV['AUTOPROJ_CURRENT_ROOT'] +"/ros"
	    	message "deleting build folder #{installspace}/build_isolated"
		    Autobuild::Subprocess.run(self, 'build', 'rm', "-rf", "#{installspace}/build_isolated", :working_directory => 'ros')
		    Autobuild::Subprocess.run(self, 'build', 'rm', "-rf", "#{installspace}/devel_isolated", :working_directory => 'ros')
        end
        
    end
end



# internal package to invoke catkin (don't use outside this file)
# it is the dependency to actually invoke catkin
# the name is fixed to ros in order to let "amake" work in the ros/ subfolder

metapackage 'ros' do |pkg|
	pkg.provides 'sensor_msgs'
	pkg.provides 'std_msgs'
end
remove_from_default 'ros'

# actual ros packages
# IMPORTANT: they do NOT state the /ros/ prefix, it is added automatically by the 
# catkin_package definition

catkin_package 'navigation_2d' do |pkg|
	#we cannot add os dependencies in the package itself, so do it here:
	pkg.depends_on 'tbb'
	pkg.depends_on 'ros/src/p2os'
	pkg.depends_on 'ros/navigation'
    pkg.depends_on 'ros/bfl'
end

catkin_package 'navigation'
catkin_package 'bfl'
catkin_package 'p2os'

catkin_package 'moveit/ros'
catkin_package 'moveit/core'
catkin_package 'moveit/planners'
catkin_package 'moveit/robots'
catkin_package 'moveit/msgs' do |pkg|
	pkg.depends_on 'ros/object_recognition/vision/or_msgs'
end


catkin_package 'moveit/commander'
catkin_package 'moveit/pr2'
catkin_package 'moveit/ikfast'
catkin_package 'moveit/setup_assistant'
catkin_package 'moveit/experimental'
catkin_package 'moveit/plugins'
catkin_package 'moveit/docs'
catkin_package 'object_recognition/vision/or_msgs'

